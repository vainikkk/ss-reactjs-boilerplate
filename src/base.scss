@use "./scss/" as *;

svg {
  pointer-events: none;
}

* {
  outline: none;
}
/* Change the white to any color ;) */
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 30px white inset !important;
}

svg {
  pointer-events: none;
}

.cursor_default {
  cursor: default !important;
}
a {
  cursor: pointer;
  color: inherit;
  text-decoration: none;
}
.fs-500 {
  font-weight: 500;
}
/*for sticky footer & footer-module.scss*/
html {
  position: relative;
  min-height: 100%;
  body {
    padding-bottom: 110px;
    height: 100%;
  }
}

/*******************/

body {
  background: white;
  color: $primaryText;
  line-height: 1.4;
  font-size: 14px;
  font-weight: normal;
}
.overflow-visible {
  overflow: visible !important;
}
.bgColor2 {
  background-color: $backgroundColor;
}
@media (min-width: 1200px) {
  .container {
    max-width: 1180px;
  }
}
a {
  // color: $primaryColor;
  @include transition(all, 0.4s, ease-out);
  text-decoration: none;

  &:hover {
    color: $primaryLightColor;
    text-decoration: none;
  }

  &.disabled {
    pointer-events: none;
    cursor: not-allowed;
    opacity: 0.5;
  }
}
.breakall {
  word-break: break-all !important;
}
.no-border {
  border-width: 0 !important;
}
.svg * {
  @include transition(all, 0.1s, ease-in-out);
}
// Typography
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 0;
}

p {
  margin-bottom: 0;
}

h1 {
  font-size: 24px;
}

h2 {
  font-size: 22px;
}

h3 {
  font-size: 20px;
}

h4 {
  font-size: 18px;
}

h5 {
  font-size: 16px;
}

h6 {
  font-size: 14px;
}

.gap30 {
  height: 30px;
}
.gap40 {
  height: 40px;
}

.semi-bold {
  font-weight: 600;
}

.page-title {
  font-size: 20px;
  font-weight: 500;
  color: $primaryText;
  padding-top: 5px;
  padding-bottom: 30px;
  span {
    color: $textShade1;
  }
}

.subtitle2 {
  font-size: 0.88rem;
  font-family: "Lato", sans-serif;
  font-weight: 700;
  line-height: 1.57;
  letter-spacing: 0;
}

.body2 {
  font-size: 0.88rem;
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: 1.5;
  letter-spacing: 0.15px;
}

input::-ms-clear {
  display: none;
}

/* ====================
 Help class start
 ==================== */

.mt40 {
  margin-top: 40px;
}

.mt30 {
  margin-top: 30px;
}

.mt20 {
  margin-top: 20px;
}

.mt15 {
  margin-top: 15px;
}

.mt10 {
  margin-top: 10px;
}

.mt5 {
  margin-top: 5px;
}
.mt4 {
  margin-top: 4px;
}
.mt3 {
  margin-top: 3px;
}
.mt2 {
  margin-top: 2px;
}

.mb30 {
  margin-bottom: 30px;
}

.mb20 {
  margin-bottom: 20px;
}

.mb15 {
  margin-bottom: 15px;
}

.mb10 {
  margin-bottom: 10px;
}

.mb5 {
  margin-bottom: 5px;
}

.ml20 {
  margin-left: 20px;
}

.ml15 {
  margin-left: 15px;
}

.ml10 {
  margin-left: 10px;
}

.ml5 {
  margin-left: 5px;
}

.mr20 {
  margin-right: 20px;
}

.mr15 {
  margin-right: 15px;
}

.mr10 {
  margin-right: 10px;
}

.mr5 {
  margin-right: 5px;
}

.pt30 {
  padding-top: 30px;
}

.pt40 {
  padding-top: 40px;
}

.pt20 {
  padding-top: 20px;
}

.pt15 {
  padding-top: 15px;
}

.pt10 {
  padding-top: 10px;
}

.pt5 {
  padding-top: 5px;
}

.pb20 {
  padding-bottom: 20px;
}

.pb15 {
  padding-bottom: 15px;
}

.pb10 {
  padding-bottom: 10px;
}

.pb5 {
  padding-bottom: 5px;
}

.pl20 {
  padding-left: 20px;
}

.pl15 {
  padding-left: 15px;
}

.pl10 {
  padding-left: 10px;
}

.pl5 {
  padding-left: 5px;
}

.pl65 {
  padding-left: 65px !important;
}

.pr20 {
  padding-right: 20px;
}

.pr15 {
  padding-right: 15px;
}

.pr10 {
  padding-right: 10px;
}

.pr5 {
  padding-right: 5px;
}

.no_mar {
  margin: 0 !important;
}

.no_pad {
  padding: 0 !important;
}

.p_t_n {
  padding-top: 0 !important;
}

.p_b_n {
  padding-bottom: 0 !important;
}

.p_l_n {
  padding-left: 0 !important;
}

.p_r_n {
  padding-right: 0 !important;
}

.p30 {
  padding: 30px;
}

.no_float {
  float: none;
}

.d_b {
  display: block;
}

.inline_flex {
  display: inline-flex;
}

.hide {
  display: none;
}

.show {
  display: block;
}

.breake_all {
  word-break: break-all;
}

.cursor_pointer,
:global(.cursor_pointer) {
  cursor: pointer;
}

.clear {
  clear: both;
}

.truncate,
:global(.truncate) {
  @include truncate(100%);
}

.text_capitalize {
  text-transform: capitalize;
}

.xoverflow_hidden {
  overflow-x: hidden;
}
.bb0 {
  border-bottom: 0 !important;
}

/* ====================
 Help class end
 ==================== */

/* ==========================
 =============================
 Don't write any CSS after this responsive
 =============================
 ============================= */
